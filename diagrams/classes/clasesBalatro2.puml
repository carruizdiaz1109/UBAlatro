@startuml

package Model {

class Jugador {
    - nombre: string
    - puntaje: int
    - manoActual: Mano
    - comodines: List<Comodin>
    - cartasTarot: List<Tarot>
    - cartasSeleccionadas: List<CartaPoker>
    + Jugador(nombre: string)
    + repartir()
    + jugar(): Jugada
    + descartarCartas()
    + comprarCartas()
    + ordenarCartas()
}


class Mazo {
    - cantidadCartas: int
    + repartir(): Mano
    + darCarta(): CartaPoker
}

class Mano {
    - cartas: List[CartaPoker]
    - cantidadCartas: int
    + seleccionarCarta(): CartaPoker
    + ordenarCartas()
    + descartar(cartas: List<CartaPoker>)
    + manoLlena():boolean
}

class Puntaje {
    - puntos: int
    - multiplicador: int
    + Puntaje(puntos:int, multiplicador:int)
    + incrementarPuntos(incremento: int)
    + incrementarMultiplicador(incremento: int)
    + multiplicarMultiplicador(incremento: int)
    + calcularPuntaje(): int
}

class CartaPoker {
    - valor: int
    - palo: Palo
    - id: int
    + CartaPoker(valor: int, palo: Palo)
    + comprar(): CartaPoker
    + modificarPuntaje(incremento: int)
}

class Ronda {
    - PuntajeMinimo
    - DescartesDisponibles
    - JugadasDisponibles
    - PuntajeAcumulado
    + Ronda(puntajeMinimo)
    + iniciarRonda()
    + verificarPuntaje(): Puntaje
}

abstract class Jugada {
    - sumaCartas: int
    - Puntaje: Puntaje
    + Jugada(Lista<CartaPoker>)
    + {abstract}obtenerPuntaje(): Puntaje
}

CartaPoker o-- Puntaje
Jugador o-- Mazo
Mazo ..> Mano
Mazo o-- "1..*" CartaPoker
Jugador ..> Jugada
Jugada o-- Puntaje
Ronda ..> Jugador
}
@enduml