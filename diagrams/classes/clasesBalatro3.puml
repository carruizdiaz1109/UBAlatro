@startuml

package Model {

class Tienda {
    - comodinesALaVenta: ArrayList<Comodin>
    - tarotsALaVenta: ArrayList<Tarot>
    - cartasALaVenta: ArrayList<CartaPoker>
    + Tienda(tiendaNode: JsonNode)
    - inicializarComodines(tiendaNode: JsonNode)
    - procesarComodin (comodinIndividual: JsonNode): Comodin
    - inicializarTarots(tiendaNode: JsonNode)
    - crearTarot(tarotNode: JsonNode):Tarot
}

interface Comprable {
    + comprar(): Comprable
}

abstract class Comodin {
    - nombre: string
    - descripcion: string

    + Comodin(valor: int, multiplicador: int, nombre: String, descripcion: String)
    + {abstract}aplicar(unaJugada: Jugada)
}

class EfectoJugada {
    + aplicar(unaJugada: Jugada)
}

class EfectoCombinado{
    + EfectoCombinado(lasCombinacines: List <Comodin>, nombre: string, descripcion: string)
    + aplicar(unaJugada: Jugada)
}
class EfectoPuntaje{
    + aplicarEfecto(unaJugada: Jugada)
}

class Tarot {

    + Tarot(valor: int, multiplicador: int)
    + modificarPuntaje(unPuntaje: Puntaje): Puntaje
}

class Puntaje {
    - puntos: int
    - multiplicador: int

    + Puntaje(puntos:int, multiplicador:int)
    + incrementarPuntos(incremento: int)
    + incrementarMultiplicador(incremento: int)
    + calcularPuntaje(): int
    + sumarPuntaje(unPuntaje: Puntaje):Puntaje
    + compararPuntajecon(otroPuntaje: int): boolean
    + compararPuntajecon(otroPuntaje: Puntaje): boolean
}


Tienda o-- Comprable
Comodin -up-|> Comprable
Tarot -up-|> Comprable
EfectoPuntaje -up-|> Comodin
EfectoJugada -up-|> Comodin
EfectoCombinado -up-|> Comodin
EfectoCombinado o-- Comodin
Comodin o-right-- Puntaje
Tarot o-left-- Puntaje
}
@enduml