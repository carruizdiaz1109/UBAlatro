@startuml

package Model {

class Tienda {
    - cartasALaVenta: ArrayList<CartaPoker>

    + Tienda(tiendaNode: JsonNode)
    - inicializarComodines(tiendaNode: JsonNode)
    - procesarComodin (comodinIndividual: JsonNode): Comodin
    - inicializarTarots(tiendaNode: JsonNode)
    - crearTarot(tarotNode: JsonNode):Tarot
    + obtenerComodines(): ArrayList<Comodin>
    + obtenerTarots(): ArrayList<Tarot>
    + obtenerCartas(): ArrayList<CartaPoker>

}

interface Comprable {
    + comprar(): Comprable
}

interface Aleatoriedad {
   + seAplica(): boolean
}

abstract class Comodin {
    - nombre: string
    - descripcion: string

    + Comodin(puntaje: Puntaje, nombre: String,
    descripcion: String, aleatoriedad: Aleatoreidad)
    + {abstract}aplicar(unaJugada: Jugada)
}

abstract class Tarot {
    - nombre: String
    - descripcion: String
    - sobre: String
    - ejemplar: String

    + Tarot(nombre: String, descripcion: String,
    puntaje: Puntaje, sobre: String, ejemplar: String)
    + {abstract}aplicar(objeto: Object)
}



Tienda o-- "*" Comprable
Comodin .up.|> Comprable
Comodin .up.|> Aleatoriedad
Tarot .up.|> Comprable





}
@enduml